<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<PackageId>LiteRetry</PackageId>
		<Version>0.0.10</Version>
		<Authors>Javier Angosto Barjollo</Authors>
		<Company>Independent</Company>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<Description>
			LiteRetry is a lightweight, fluent, and extensible retry utility for .NET. It helps developers eliminate repetitive try/catch blocks and build resilient code with ease when dealing with transient failures.
		</Description>
		<PackageTags>retry;dotnet;resilience;backoff;fluent;builder;lite</PackageTags>
		<RepositoryUrl>https://github.com/JavierAngostoDev/LiteRetry</RepositoryUrl>
		<PackageIcon>icon.png</PackageIcon>
		<PackageReleaseNotes>
			- Added support for global total timeout via `Timeout(TimeSpan)` in both `RetryExecutor` and `RetryBuilder`.
			- The retry process will now stop early and return a structured failure result if the total timeout is exceeded.
			- `RetryBuilder` extended with `.WithTimeout(...)` for fluent configuration.
			- Cancellation tokens are now respected alongside total timeout limits using a linked token source.
			- Enhanced test coverage for timeout handling, including early termination and success within limit.
			- Improved internal documentation and XML comments for better IntelliSense support.
		</PackageReleaseNotes>
	</PropertyGroup>

	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath="" />
		<None Include="images\icon.png" Pack="true" PackagePath="\"/>
	</ItemGroup>

</Project>
